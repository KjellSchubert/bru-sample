{
    "includes": [
        "bru_common.gypi",
        "bru_overrides.gypi"
    ],

    # initially I had these settings in bru_overrides.gyp, but one of the zeromq
    # tests fails with -fsanitize=address enabled (bug or false alarm?)
    "target_defaults": {
        "cflags": [
            # this enables C++11 for clang
            # would it be OK to compile upstream dependencies with C++98,
            # but downstream ones with C++11? Unsure, I guess not.
            "-std=c++11",
            
            # use clang's address sanitizer across all modules
            # (note you need the matching ldflags for this cflag)
            "-fsanitize=address"
        ],

        "ldflags": [
            "-fsanitize=address"
        ]
    },

    # this lib contains the code generated by protoc, used both by client
    # and server
    "targets": [
        {
            "target_name": "addressbook",
            "type": "static_library",
            "sources": [
                "src/zmq_util.cpp",
                "src/zmq_text_msg.cpp",
                "src/zmq_protobuf_msg.cpp",
                "src/zmq_reactor.cpp",
                "src/addressbook.pb.cc" # generated by protoc action below
            ],
            
            # this scary looking action regenerates the *.pb.cc & h files
            # addressbook.proto. This action was copied from 
            # bru:library/protoc/*.gyp
            "actions": [
                {
                    "action_name": "protoc",
                    "inputs": [
                        "src/addressbook.proto"
                    ],
                    "outputs": [
                        "src/addressbook.pb.cc",
                        "src/addressbook.pb.h"
                    ],
                    "action": [
                        "<(PRODUCT_DIR)/protoc",
                        "<@(_inputs)",
                        "--cpp_out=."
                    ],
                    "message": "invoking protoc"
                }
            ],

            "include_dirs": [
                "include",
                # only needed since that's where protoc dumps addressbook.pb.h
                # which addressbook.pb.h includes "src/addressbook.pb.h".
                # May wanna copy ths file into ./include instead?
                "./"
            ],
            "dependencies": [
                "bru_modules/protobuf/protobuf.gyp:*",
                "bru_modules/zeromq/zeromq.gyp:*",
                "bru_modules/cppzmq/cppzmq.gyp:*"
            ],
            "direct_dependent_settings": {
                "include_dirs": [
                    "include",
                    "./" # only for "src/addressbook.pb.h"
                ]
            }
        },
        
        {
            "target_name": "addressbook-test",
            "type": "executable",
            "sources": [
                "test/test_zmq_text_msg.cpp",
                "test/test_zmq_protobuf_msg.cpp",
                "test/test_zmq_reactor.cpp",
                "test/test_addressbook.cpp"
            ],
            "dependencies": [
                "addressbook",
                "bru_modules/protobuf/protobuf.gyp:*",
                "bru_modules/zeromq/zeromq.gyp:*",
                "bru_modules/cppzmq/cppzmq.gyp:*",
                "bru_modules/googletest/googletest.gyp:*"
            ]
        },

        {
            "target_name": "server",
            "type": "executable",
            "sources": [
                "src/server.cpp"
            ],
            "dependencies": [
                "addressbook",
                "bru_modules/protobuf/protobuf.gyp:*",
                "bru_modules/zeromq/zeromq.gyp:*",
                "bru_modules/cppzmq/cppzmq.gyp:*"
            ]
        },
        
        {
            "target_name": "client_req",
            "type": "executable",
            "sources": [
                "src/client_req.cpp"
            ],
            "dependencies": [
                "addressbook",
                "bru_modules/protobuf/protobuf.gyp:*",
                "bru_modules/zeromq/zeromq.gyp:*",
                "bru_modules/cppzmq/cppzmq.gyp:*"
            ]
        },

        {
            "target_name": "client_dealer",
            "type": "executable",
            "sources": [
                "src/client_dealer.cpp"
            ],
            "dependencies": [
                "addressbook",
                "bru_modules/protobuf/protobuf.gyp:*",
                "bru_modules/zeromq/zeromq.gyp:*",
                "bru_modules/cppzmq/cppzmq.gyp:*"
            ]
        }
    ]
}